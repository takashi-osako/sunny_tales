chokidar = require "chokidar"
path = require "path"
{exec} = require "child_process"
fs = require "fs"
wrench = require 'wrench'

# Constants
handlebarDir = "templates"
destDir = "templates_js"
hb = "node_modules/handlebars/bin/handlebars"

compileTemplates = (src) ->
  tarDir = path.dirname src.replace handlebarDir, destDir
  mkdir tarDir
  basename = path.basename src
  # Only process .template files
  if path.extname(src) == '.template'
    tar = path.join tarDir, basename
    # Execute handlebars to precompile
    exec hb + " #{src} -f #{tar}.js", (err, stdout, stderr) ->
      if err 
        console.log err
      else
        console.log "Compiled #{src} -> #{tar}.js"

mkdir = (destDir) ->
  if not fs.existsSync destDir
    wrench.mkdirSyncRecursive destDir, '0777'
    
rmdir = (destDir) ->
  if fs.existsSync destDir
    wrench.rmdirSyncRecursive destDir, false

option '-w', '--watch [true]', 'true to watch files. Defaults to false'
task "compile", "compile and watch for handlebar template changes", (options) ->
  watch = options.watch or 'false'
  
  rmdir destDir
  watcher = chokidar.watch handlebarDir, {persistent: watch.toLowerCase() == 'true'}
  
  watcher.on "add", (path, stats) ->
    compileTemplates path
  watcher.on "change", (path, stats) ->
    compileTemplates path

  watcher.close()
